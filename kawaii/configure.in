dnl taken from SDL, audiere.

dnl Process this file with autoconf to produce a configure script.
AC_INIT(README)
dnl AM_INIT_AUTOMAKE

AC_CONFIG_SRCDIR(src/main.c)

BITS="64"

dnl Enable all warnings
CFLAGS="$CFLAGS -Wall -m$BITS"
LIBS="-m$BITS -lm"

VERSION=1.0
PACKAGE="kawaii"

AC_SUBST(VERSION)
AC_SUBST(PACKAGE)


dnl Detect the canonical host and target build environment
AC_CANONICAL_SYSTEM

dnl Setup for automake
AM_INIT_AUTOMAKE(kawaii, $VERSION)

dnl Check for tools

AC_PROG_CC
AC_C_INLINE
AC_PROG_RANLIB

AC_PATH_PROG(UPX, upx, none)
AM_CONDITIONAL(USE_UPX, false)


dnl SDL
SDL_VERSION=1.2.7
AM_PATH_SDL($SDL_VERSION,
   :,
   AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)

CFLAGS="$CFLAGS $SDL_CFLAGS"

dnl profiling
AC_MSG_CHECKING(profiling)
AC_ARG_ENABLE(profile, AC_HELP_STRING([--enable-profile], [Enable profiling (default=no)]),, enable_profile=no)
if test x$enable_profile = xyes; then
	AC_MSG_RESULT(yes)
	CFLAGS="$CFLAGS -pg -g"
	LIBS="$LIBS -pg -g"
else
	AC_MSG_RESULT(no)
fi

dnl SSE
AC_MSG_CHECKING(use SSE fpu)
AC_ARG_ENABLE(sse, AC_HELP_STRING([--enable-sse], [Enable use of SSE as fpu on x86 (default=no)]),, enable_sse=no)
if test x$enable_sse = xyes; then
	AC_MSG_RESULT(yes)
	CFLAGS="$CFLAGS -mfpmath=sse -msse"
else
	AC_MSG_RESULT(no)
fi

dnl debug mode
AC_MSG_CHECKING(debug mode)
AC_ARG_ENABLE(debug,AC_HELP_STRING([--enable-debug], [Disable aggressive optimizations (default=no)]),, enable_debug=no )
if test x$enable_debug != xyes; then
    if test x$ac_cv_prog_gcc = xyes; then
	AC_MSG_RESULT(no)
	CFLAGS="$CFLAGS -O2 -pipe -ffast-math -fstrength-reduce -fexpensive-optimizations"
	LIBS="$LIBS -pipe"
	if test x$enable_profile != xyes; then
	    CFLAGS="$CFLAGS -fomit-frame-pointer -s"
	    LIBS="$LIBS -s"
	    AM_CONDITIONAL(USE_UPX, test x$UPX != xnone)
	fi
    fi
    case "$target" in
        i486-*-*)
            if test x$ac_cv_prog_gcc = xyes; then
                CFLAGS="$CFLAGS -march=i486"
            fi
            ;;
        i?86-*-*)
            if test x$ac_cv_prog_gcc = xyes; then
                CFLAGS="$CFLAGS -march=pentium -mcpu=pentiumpro"
            fi
            ;;
        *-*-osf*)
            if test x$ac_cv_prog_gcc != xyes; then
                CFLAGS="-g3 -fast -arch host"
            fi
            ;;
    esac
else
    AC_MSG_RESULT(yes)
fi


dnl Figure out which math library to use
case "$target" in
    *-*-cygwin* | *-*-mingw32*)
        MATHLIB=""
        SYS_GL_LIBS="-lopengl32 -lGLU32 -lwinmm -lgdi32"
	NFLAGS="-f win32 -D__WIN32__"
        ;;
    *-*-beos*)
        MATHLIB=""
        SYS_GL_LIBS="-lGL -lGLU"
        ;;
    *-*-darwin*)
        MATHLIB=""
        SYS_GL_LIBS=""
        ;;
    *-*-aix*)
        if test x$ac_cv_prog_gcc = xyes; then
            CFLAGS="-mthreads"
	fi
        SYS_GL_LIBS=""
        ;;
    *)
        MATHLIB="-lm"
        AC_PATH_X
        AC_PATH_XTRA
        if test x$have_x = xyes; then
            CFLAGS="$CFLAGS $X_CFLAGS"
            SYS_GL_LIBS="$X_LIBS -lGL -lGLU"
        else
            SYS_GL_LIBS="-lGL -lGLU"
        fi
	NFLAGS="-f elf -D__LINUX__"
        ;;
esac
AC_SUBST(MATHLIB)

dnl use native win32 or SDL ?
AC_MSG_CHECKING(native win32)
AC_ARG_ENABLE(native_win32,AC_HELP_STRING([--enable-native-win32], [Use native win32 instead of SDL (default=no)]),, enable_native_win32=no)
if test x$enable_native_win32 != xyes; then
    AC_MSG_RESULT(no (SDL+mikmod))
    MUSICDIR="mikmod"
    MUSICLIB="mikmod/libmikmod.a"
    CFLAGS="$CFLAGS -I\$(top_srcdir)/src/mikmod"
    CFLAGS="$CFLAGS -DUSE_MIKMOD"

    CFLAGS="$CFLAGS -DUSE_SDL"
    LIBS="$LIBS $SDL_LIBS"
else
    AC_MSG_RESULT(yes (win32+minifmod))
    MUSICDIR="minifmod"
    MUSICLIB="minifmod/libminifmod.a"
    CFLAGS="$CFLAGS -I\$(top_srcdir)/src/minifmod"
    LIBS="$LIBS"

    AC_PATH_PROG(NASM, nasm)
fi



dnl Check for OpenGL
AC_MSG_CHECKING(for OpenGL support)
have_opengl=no
AC_TRY_COMPILE([
 #include "SDL_opengl.h"
],[
],[
have_opengl=yes
])
AC_MSG_RESULT($have_opengl)
if test x$have_opengl = xyes; then
    LIBS="$LIBS $SYS_GL_LIBS"
else
    LIBS="$LIBS"
fi

AC_SUBST(MUSICDIR)
AC_SUBST(MUSICLIB)

AC_SUBST(NFLAGS)

dnl Expand the cflags and libraries needed by apps using SDL
dnl AC_SUBST(CFLAGS)
AC_SUBST(CFLAGS_SSE)
AC_SUBST(LIBS)


dnl Expand the libraries needed for static and dynamic linking
dnl AC_SUBST(STATIC_SYSTEM_LIBS)
dnl AC_SUBST(SHARED_SYSTEM_LIBS)
dnl AC_SUBST(SYSTEM_LIBS)

CXXFLAGS="$CFLAGS"

# Finally create all the generated files
AC_OUTPUT([
Makefile
src/Makefile
src/data/Makefile
src/data/src/Makefile
src/minifmod/Makefile
src/mikmod/Makefile
])
